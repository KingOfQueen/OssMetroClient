<UserControl x:Class="OssClientMetro.Views.DownloadView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:cal="http://www.caliburnproject.org"
             Height="Auto" Width="Auto">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="root">
        <Grid.Resources>
            <DataTemplate x:Key="FileNameColumnDataTemplate">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding IconUri}" Width="15" Height="15" Margin="5,0,5,0"/>
                    <TextBlock Text="{Binding displayName}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="PercentColumnDataTemplate">
                <StackPanel Orientation="Horizontal">
                    <ProgressBar Value="{Binding Percent}"  IsIndeterminate="False" Height="10" Width="130" VerticalAlignment="Center"></ProgressBar>
                    <TextBlock Text="{Binding Percent}"  VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                    <TextBlock Text=" %"  VerticalAlignment="Center"></TextBlock>
                </StackPanel>


            </DataTemplate>

            <DataTemplate x:Key="SpeedColumnDataTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Speed,Converter={StaticResource LongSizeToString}}"/>
                    <TextBlock Text="/S" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="OperateColumnDataTemplate">
                <StackPanel Orientation="Horizontal">

                    <Button Height="24" ToolTip="打开所在文件夹" Style="{StaticResource MyMetroButton}"  cal:Message.Attach="[Event Click] = [openLocalFolder($dataContext)]">
                        <Image Source="../Images/openfolder.png" Height="16" Margin="5,0,5,0"></Image>
                    </Button>
                    <Button Height="24"  ToolTip="删除" Style="{StaticResource MyMetroButton}"  cal:Message.Attach="[Event Click] = [deleteOperate($dataContext)]">
                        <Image Source="../Images/delete2.png" Height="16" Margin="5,0,5,0"></Image>
                    </Button>
                </StackPanel>


            </DataTemplate>

            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource Grey3}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid Tag="{Binding DataContext, ElementName=root}" Background="Transparent">
                                    <Grid.ContextMenu >
                                        <ContextMenu  cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="打开本地文件"  cal:Message.Attach="[Event Click] = [openLocalFolder()]"></MenuItem>
                                            <MenuItem Header="删除"  cal:Message.Attach="[Event Click] = [deleteOperate()]"></MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="#FF143c65" />
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource AccentColorBrush}"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor3}" />
                                        </Setter.Value>
                                    </Setter>

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>
        <ListView Visibility="{Binding DownloadVis,Converter={StaticResource BoolToVisibleConverter}}" x:Name="ObjectList" SelectedIndex="{Binding selectedIndex}"  Height="550" VerticalAlignment="Top" Margin="0,0,10,0">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="名称" CellTemplate="{StaticResource FileNameColumnDataTemplate}" Width="230" />
                    <GridViewColumn Header="大小"   DisplayMemberBinding="{Binding Size, Converter={StaticResource LongSizeToString}}" Width="80"/>
                    <GridViewColumn Header="进度"  CellTemplate="{StaticResource PercentColumnDataTemplate}" Width="180"/>
                    <GridViewColumn Header="速度"  CellTemplate="{StaticResource SpeedColumnDataTemplate}" Width="80"/>
                    <GridViewColumn Header="操作"  CellTemplate="{StaticResource OperateColumnDataTemplate}" Width="100"/>
                    
                    
                </GridView>
            </ListView.View>

           
        </ListView>

        <ListView  Visibility="{Binding CompleteVis,Converter={StaticResource BoolToVisibleConverter}}"   ItemsSource="{Binding compeletedListModel}"  SelectedIndex="{Binding selectedIndex}"  Height="550" VerticalAlignment="Top" Margin="0,0,10,0">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="名称" CellTemplate="{StaticResource FileNameColumnDataTemplate}" Width="280" />
                    <GridViewColumn Header="大小"   DisplayMemberBinding="{Binding Size, Converter={StaticResource LongSizeToString}}" Width="100"/>                    
                    <GridViewColumn Header="完成时间" DisplayMemberBinding="{Binding CompleteTime}"   Width="150"/>
                    <GridViewColumn Header="操作"  CellTemplate="{StaticResource OperateColumnDataTemplate}" Width="100"/>


                </GridView>
            </ListView.View>


        </ListView>
        <!--<ListBox  x:Name="ObjectList" SelectedIndex="{Binding selectedIndex}" Height="400" VerticalAlignment="Top" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                    
                    <TextBlock Text="{Binding key}"  
                                       Margin='2 0 12 0'   
                                       FontSize='14' />

                        <TextBlock Text="{Binding Percent}"  
                                       Margin='2 0 12 0'   
                                       FontSize='14' />

                        <TextBlock Text="{Binding Speed}"  
                                       Margin='2 0 12 0'   
                                       FontSize='14' />
                    </StackPanel>
                </DataTemplate>
                
            </ListBox.ItemTemplate>
         </ListBox>-->

    </Grid>
</UserControl>
