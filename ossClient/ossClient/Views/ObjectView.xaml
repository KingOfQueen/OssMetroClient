<UserControl x:Class="OssClientMetro.Views.ObjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
             Height="Auto" Width="Auto"
             xmlns:ext="clr-namespace:SortListView.Extention"
            xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>

    <Grid Name="root">
        <Grid.Resources>
            <Style TargetType="{x:Type Control}">
                <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
            </Style>

            <Style x:Key="test" TargetType="{x:Type ListViewItem}">

                <Setter Property="cal:Message.Attach" Value="[Event PreviewMouseDoubleClick] = [OpenFolder()]" />
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Border.BorderBrush" Value="{DynamicResource Grey3}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid Tag="{Binding DataContext, ElementName=root}" Background="Transparent">
                                    <Grid.ContextMenu >
                                        <ContextMenu  cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="打开"  cal:Message.Attach="[Event MouseDown] = [OpenFolder()]"></MenuItem>
                                            <MenuItem Header="打开文件夹位置"  cal:Message.Attach="[Event Click] = [searchOpenLoaction()]"></MenuItem>
                                            <MenuItem Header="下载"  cal:Message.Attach="[Event Click] = [download()]"></MenuItem>
                                            <MenuItem Header="创建文件夹"  cal:Message.Attach="[Event Click] = [createFolderOperate()]"></MenuItem>
                                            <MenuItem Header="删除"  cal:Message.Attach="[Event Click] = [delete()]"></MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="#FF143c65" />
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource AccentColorBrush}"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor3}" />
                                        </Setter.Value>
                                    </Setter>

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="FileNameColumnDataTemplate">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding IconUri}" Width="15" Height="15" Margin="5,0,5,0"/>
                    <TextBlock Text="{Binding displayName}"/>
                </StackPanel>

            </DataTemplate>

            <DataTemplate x:Key="ModifyTimeColumnDataTemplate">
                <StackPanel Orientation="Horizontal" Visibility="{Binding modifyTimeVisible,  Converter={StaticResource BoolToVisibleConverter}}">
                    <TextBlock Text="{Binding ModifyTime}"/>
                </StackPanel>

            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="#ffcccccc"></Border>

        <Button x:Name="goback"    ToolTip="后退" BorderThickness="0" Background="Transparent"  Style="{StaticResource MyMetroButton}" 
                            		Height="35"
                            		Width="35"
                            		VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"  IsEnabled="{Binding history.CanGoBack}" FontWeight="Normal">
            <Image Source="../Images/left.png" Margin="-10"></Image>

        </Button>
        <Button x:Name="gofoward" ToolTip="前进" BorderThickness="0" Background="Transparent"
                            		Height="35"
                            		Width="35" HorizontalAlignment="Left"  Margin="45,0,0,0" VerticalAlignment="Center" IsEnabled="{Binding history.CanGoForward}" RenderTransformOrigin="0.487,-0.006">
        <Image Source="../Images/right.png" Margin="-10"></Image>

        </Button>

        <Button x:Name="refresh"  ToolTip="刷新" BorderThickness="0" Background="Transparent"   HorizontalAlignment="Left" Height="35" Margin="85,0,0,0" VerticalAlignment="Center" Width="35">
            <Image Source="../Images/refresh.png"  Margin="-10" ></Image>

        </Button>
        <TextBox  IsReadOnly="True" VerticalContentAlignment="Center" Text="{Binding history.NowPath}" HorizontalAlignment="Left" Height="34" Margin="140,0,0,0" TextWrapping="Wrap"  VerticalAlignment="Center" Width="356"/>
        <TextBox VerticalContentAlignment="Center"  Name="searchTextBox"  Controls:TextboxHelper.Watermark="搜索" HorizontalAlignment="Left" Height="35" Margin="515,0,0,0" TextWrapping="Wrap" VerticalAlignment="Center" Width="162"/>
        <Button BorderThickness="0" Background="Transparent"  cal:Message.Attach="[Event Click] = [Action searchOperate(searchTextBox.Text)]"  HorizontalAlignment="Left" Height="35" Margin="642,0,0,0" VerticalAlignment="Center" Width="35">
             <Image Source="../Images/search.png" ></Image>
        </Button>

        <Button  Style="{StaticResource MyMetroButton}" BorderThickness="0" Background="Transparent" Grid.Row="1" x:Name="download"  HorizontalAlignment="Left" Height="24" Margin="162,0,0,0" VerticalAlignment="Center" Width="90" HorizontalContentAlignment="Left">
            <StackPanel Orientation="Horizontal">
                <Image Source="../Images/download.png" Margin="-5,-12,-5, -12"></Image>
                <TextBlock Text="下载" FontSize="16" ></TextBlock>
            </StackPanel>
        </Button>
        <Button  Click="Button_Click" ContextMenuService.IsEnabled="False" Style="{StaticResource MyMetroButton}" Grid.Row="1"   HorizontalAlignment="Left" Height="24" Margin="266,0,0,0" VerticalAlignment="Center" Width="100">
            <StackPanel Orientation="Horizontal">
                <Image Source="../Images/upload.png" Margin="-5,-12,-5, -12"></Image>
                <TextBlock Text="上传" FontSize="16"></TextBlock>
                <Image Source="../Images/down.png" Margin="-5,-6,-5, -6"></Image>
            </StackPanel>
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header ="上传文件" cal:Message.Attach="[Event Click] = [uploadFileOperate()]"></MenuItem>
                    <MenuItem Header ="上传文件夹" cal:Message.Attach="[Event Click] = [uploadFolderOperate()]"></MenuItem>
                    <MenuItem Header ="压缩并上传文件夹"  cal:Message.Attach="[Event Click] = [uploadFolderZipOperate()]"></MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <!--<Button Grid.Row="1" x:Name="uploadFolderOperate" Content="uploadFolder" HorizontalAlignment="Left" Height="22" Margin="309,30,0,0" VerticalAlignment="Top" Width="108" />
        <Button Grid.Row="1"  x:Name="uploadFolderZipOperate"  Content="uploadFolderAndZip" HorizontalAlignment="Left" Height="25" Margin="352,0,0,0" VerticalAlignment="Top" Width="115"/>-->
        <Button  Grid.Row="1" Style="{StaticResource MyMetroButton}"  x:Name="createFolderOperate"  HorizontalAlignment="Left" Height="25" Margin="10,0,0,0" VerticalAlignment="Center" Width="120">
            <StackPanel Orientation="Horizontal">
                <Image Source="../Images/add_folder.png" Margin="5,0,5,0"></Image>
                <TextBlock Text="创建文件夹" FontSize="16"    ></TextBlock>
            </StackPanel>
        </Button>
        <Button  Grid.Row="1" Style="{StaticResource MyMetroButton}"  x:Name="delete" HorizontalAlignment="Left" Height="24" Margin="412,0,0,0" VerticalAlignment="Center" Width="84">
            <StackPanel Orientation="Horizontal">
                <Image Source="../Images/delete.png" Margin="-5,-12,-5,-12"></Image>
                <TextBlock Text="删除" FontSize="16" ></TextBlock>
            </StackPanel>
        </Button>
        <StackPanel Grid.Row="2">
        <ListView  ItemContainerStyle="{DynamicResource test}"   x:Name="objectList" SelectedIndex="{Binding selectedIndex}"  Height="429" VerticalAlignment="Top" AllowDrop="True"   
                   cal:Message.Attach="[Event Drop] = [Action DragEnter($eventArgs)]" Margin="0,0,10,0" ext:ListViewBehavior.HeaderSort="True">
            <!--<ListView.ContextMenu>
                <ContextMenu>
                  
                  
                </ContextMenu>
            </ListView.ContextMenu>-->
                <ListView.View>
                <GridView>
                    <GridViewColumn Header="名称" CellTemplate="{StaticResource FileNameColumnDataTemplate}" Width="200" ext:ListViewBehavior.SortField="displayName"/>
                    <GridViewColumn Header="大小" DisplayMemberBinding="{Binding Size, Converter={StaticResource LongSizeToString}}" Width="200" ext:ListViewBehavior.SortField="Size"/>
                    <GridViewColumn Header="修改时间" CellTemplate="{StaticResource ModifyTimeColumnDataTemplate}" Width="200" ext:ListViewBehavior.SortField="ModifyTime"/>
                   
                </GridView>
            </ListView.View>
        </ListView>
            <Controls:ProgressIndicator DataContext="{Binding DataContext, ElementName=root}" ProgressColour="{StaticResource AccentColorBrush}"
                                                    Height="6"
                                                    Width="600" Visibility="{Binding  ProgressVisible, Converter={StaticResource BoolToVisibleConverter}}"  />
        </StackPanel>
        <!--<ComboBox 
             ItemsSource="{Binding Countries}"
                    DisplayMemberPath="Path"
                    SelectedValue="{Binding SelectedSourceCountryTwoLetterCode}"
                    SelectedValuePath="Path"
    
            
            HorizontalAlignment="Left" Height="28" Margin="162,434,0,0" Grid.Row="2" VerticalAlignment="Top" Width="345"/>-->

        <!--<ListBox  x:Name="objectList" SelectedIndex="{Binding selectedIndex}" Height="400" VerticalAlignment="Top" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                   
                        <TextBlock Text="{Binding key}"  
                                       Margin='2 0 12 0'   
                                       FontSize='14' />
             
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="cal:Message.Attach" Value="[Event PreviewMouseDoubleClick] = [OpenFolder()]" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>-->
       
     
        
        
        
        
        
        
    </Grid>
</UserControl>
