<UserControl x:Class="OssClientMetro.Views.NavigateView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
              xmlns:common="clr-namespace:WPF.Common"
             Width="300" Height="600" Background="#ffe5e5e5"
              xmlns:controls="clr-namespace:OssClientMetro.Controls"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <UserControl.Resources>
    <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />


        </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
    </UserControl.Resources>
    <Controls:MetroContentControl>
        <StackPanel Name="root">
        <StackPanel.Resources>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}"  Margin="0,0,0,0">
                               
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="80"/>

                                        </Grid.ColumnDefinitions>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-90"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                        <Border BorderBrush="{x:Null}" Grid.Column="2" Margin="-20" >
                                            <TextBlock Text="{Binding AddTaskNumText}" common:VisibilityAnimation.AnimationType="Fade"   FontSize="26" TextAlignment="Center" VerticalAlignment="Center"  Visibility="{Binding AddTaskNumVisibility, Converter={StaticResource BoolToVisibleConverter}}"/>
                                        </Border>
                                       
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                    <Setter Property="RenderTransform" TargetName="arrow">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                <StackPanel Orientation="Vertical">
                                    <ToggleButton Height="40" x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="ExpandSite" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpanderDownHeaderStyle2" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}"  Margin="0,0,0,0">
  
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="25"/>
                                        </Grid.ColumnDefinitions>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-90"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Button  ToolTip="刷新" Style="{DynamicResource MyMetroButton}" Grid.Column="2" cal:Message.Attach="[Event Click] = [refreshBuckets()]">
                                        <Image Source="../Images/refresh.png"></Image>
                                    </Button>
                                        <Button  ToolTip="新建Bucket" Style="{DynamicResource MyMetroButton}" Grid.Column="3"  cal:Message.Attach="[Event Click] = [Action createBucket2]">
                                            <Rectangle Width="12"
                            			Height="12">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Fill"
                            					Visual="{StaticResource appbar_add}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Button>
                                        <Button ToolTip="删除" Style="{DynamicResource MyMetroButton}" Grid.Column="4" IsEnabled="{Binding IsDeleteAvialable}" cal:Message.Attach="[Event Click] = [Action deleteBucket()]">
                                            <Image Source="../Images/delete2.png" Height="16" Margin="5,0,5,0"></Image>
                                        </Button>

                                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                    <Setter Property="RenderTransform" TargetName="arrow">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderStyle2" TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                <StackPanel Orientation="Vertical">
                                    <ToggleButton Height="40" x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle2}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="ExpandSite" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
          
        </StackPanel.Resources>
        <Expander Header="Buckets" IsExpanded="True" FontSize="16"  Style="{StaticResource ExpanderStyle2}"   HorizontalAlignment="Left" VerticalAlignment="Top" Width="250">
            <StackPanel Orientation="Vertical">
                <ListView HorizontalContentAlignment="Stretch"  x:Name="buckets" SelectedIndex="{Binding selectedBuketIndex}" >
                    <ListView.ItemTemplate>
                    <DataTemplate>
                            <Grid Background="Transparent"  Tag="{Binding DataContext, ElementName=root}">
                                <Grid.ContextMenu>
                                    <ContextMenu  cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="删除" cal:Message.Attach="[Event Click] = [Action deleteBucket()]"/>
                                        <MenuItem Header="修改权限" cal:Message.Attach="[Event Click] = [Action changeBucketAcl()]"/>
                                    </ContextMenu>


                                </Grid.ContextMenu>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16"></ColumnDefinition>
                                        <ColumnDefinition Width="16"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="../Images/diskdrive.png" Margin="-5" Grid.Column="1"></Image>
                                        <TextBlock Grid.Column="2"  Text="{Binding Name}"  
                                       Margin='7 0 0 0'   
                                       FontSize='16'  >
                               </TextBlock>
                            </Grid>
                        </DataTemplate>
                </ListView.ItemTemplate>
                </ListView>
               
            
            </StackPanel>
        </Expander>
        <Expander IsExpanded="True" Header="任务" FontSize="16" cal:Message.Attach="[Event Expanded] = [Action expanded()]" 
                  Style="{StaticResource ExpanderStyle1}"   HorizontalAlignment="Left" VerticalAlignment="Top" Width="250">



                <ListView Margin="0,0,0,0"  SelectedIndex="{Binding SelectedViewIndex}" BorderBrush="{DynamicResource AccentColorBrush}">
                <ListViewItem x:Name="downloadingView" cal:Message.Attach="[Event Selected] = [Action downloadingView()]"   Height="24">
                    <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"></ColumnDefinition>
                                <ColumnDefinition Width="16"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image Source="../Images/downloading.png" Margin="-5" Grid.Column="1"></Image>
                            <TextBlock Margin='7 0 0 0' Text="正在下载"  Grid.Column="2"></TextBlock>
                            <TextBlock  Grid.Column="2" Text="{Binding DownloadingCount}"  HorizontalAlignment="Left" Margin="150,0,0,0"></TextBlock>
                    </Grid>
                </ListViewItem>
                <ListViewItem x:Name="uploadingView"  cal:Message.Attach="[Event Selected] = [Action uploadingView()]" Height="24">
                    <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"></ColumnDefinition>
                                <ColumnDefinition Width="16"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image Source="../Images/uploading.png" Margin="-5" Grid.Column="1"></Image>
                            <TextBlock Margin='7 0 0 0' Grid.Column="2" Text="正在上传"></TextBlock>
                            <TextBlock Grid.Column="2"  HorizontalAlignment="Left" Margin="150,0,0,0" Text="{Binding UploadingCount}" ></TextBlock>
                    </Grid>
                </ListViewItem>
                <ListViewItem x:Name="compeletedView"  cal:Message.Attach="[Event Selected] = [Action compeletedView()]"  Height="24">
                    <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"></ColumnDefinition>
                                <ColumnDefinition Width="16"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image Source="../Images/complete.png" Margin="-5" Grid.Column="1"></Image>
                            <TextBlock  Margin='7 0 0 0' Grid.Column="2"  Text="已完成"></TextBlock>
                            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Margin="150,0,0,0" Text="{Binding CompeletedCount}" ></TextBlock>
                    </Grid>
                 </ListViewItem>
            </ListView>

        </Expander>
            <!--<Button x:Name="createBucket" Content="create" HorizontalAlignment="Left" Height="27"  VerticalAlignment="Top" Width="106"/>
        <Button x:Name="deleteBucket" Content="delete" HorizontalAlignment="Left" Height="27"  VerticalAlignment="Top" Width="106"/>
        <TextBox x:Name="inputBucketName" HorizontalAlignment="Left" Height="27" TextWrapping="Wrap"  VerticalAlignment="Top" Width="201" />
        <Button x:Name="refreshBuckets" Content="refresh" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="120"/>-->

            <!--<ListView>
                <ListViewItem Content="1"></ListViewItem>
                <ListViewItem Content="2"></ListViewItem>
            </ListView>-->
    </StackPanel>
        </Controls:MetroContentControl>
</UserControl>
